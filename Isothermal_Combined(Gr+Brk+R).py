# -*- coding: utf-8 -*-
"""
Created on Mon May 23 19:45:50 2022

@author: Manos
"""


import time 
import numpy as np
from scipy.integrate import quad,solve_ivp
from numpy import sqrt, pi
import pylab as pp
from pymaxent import moments_c,maxent_reconstruct_c0_1,maxent_reconstruct_c1_1,maxent_reconstruct_c0_2,maxent_reconstruct_c1_2,temp1,temp2
from plyer import notification

start = time.time()

'''Constants'''
a0 = 3.5e-4
kv = pi/6 
dens = 1300
q0 = 400
q1 = 2500
kr0 = 1e11
Er = 75000

Sd0 = Sl0 = 1
lmeand0 = lmeanl0 = 0.5
σd0 = σl0 = 0.025

m3d0 = 0.062806
ratio = 1.5
m3l0 = m3d0/ratio

'''Αδιαστατοποίηση'''
Lr = 100e-6 
tr = 3600
Tr = 273
scale = 1e2

Eg = Ed = 12000
R = 8.314

T = 308

kb = 0.001
kg = 1e-4
kd = 2e-4

Kg = tr/Lr * kg*np.exp(-Eg/(R*T))
Kd = tr/Lr * kd*np.exp(-Ed/(R*T))
Kbg = kb*tr

tol1 = 1e-3
tol2 = 1e-4


'''Αρχικοποίση των μεταβλητών'''
tspan=(0, 20)
step = 0.2
resolution = int(tspan[1]/step)
teval = np.linspace(tspan[0],tspan[1],resolution+1)


def f0_d(λ):
    return ( m3d0*lmeand0*(lmeand0**2+3*σd0**2)/(sqrt(2*pi*σd0)) * np.exp(-(λ-lmeand0)**2/(2*σd0**2)) )*scale 
def f0_l(λ):
    return ( m3l0*lmeanl0*(lmeanl0**2+3*σl0**2)/(sqrt(2*pi*σl0)) * np.exp(-(λ-lmeanl0)**2/(2*σl0**2)) )*scale 

initial_m_d = moments_c(f0_d, k=4, bnds=[0, np.inf])
initial_m_l = moments_c(f0_l, k=4, bnds=[0, np.inf])

initial_values = [*initial_m_d, *initial_m_l, Sd0, Sl0]

print("\033[1;36m"+'Initial moments (D)=',initial_m_d,'\nInitial moments (L)=',initial_m_d,'\033[39m')

ee0 = ( initial_m_d[3] - initial_m_l[3] ) / ( initial_m_d[3] + initial_m_l[3] )

def cinf_d(T): return( q0*np.exp(-q1/T) )
def cinf_l(T): return( q0*np.exp(-q1/T) )

def γ_d(T): return( cinf_d(T)/(Lr**3*kv*dens) )
def γ_l(T): return( cinf_l(T)/(Lr**3*kv*dens) )


'''Growth Term'''
def G_d(Sd,T,L):
    jd =  Sd-1-a0/(L*Lr*T)
    if jd>0: 
        result = Kg * jd 
        return result
    else: 
        result = Kd * jd 
        return result

def G_l(Sl,T,L):
    jl =  Sl-1-a0/(L*Lr*T)
    if jl>0: 
        result = Kg * jl 
        return result
    else: 
        result = Kd * jl 
        return result
    
'''Daughter size distribution'''
q = 0
def g(L,λ): return( 3*L**2 * (2*q+1) * ( (2/(λ**3))**(2*q+1) ) * (L**3-(λ**3)/2)**(2*q) )

'''Breakage kernel'''
def a(l):
    return l**3

'''Racemization rate'''
def Rd(Sl,Sd,T):
    return( tr*kr0*np.exp(-Er/(R*T))*(Sl - Sd) )
def Rl(Sd,Sl,T):
    return( tr*kr0*np.exp(-Er/(R*T))*(Sd - Sl) )

def moments(t,y):
    m0_d=y[0]
    m1_d=y[1]
    m2_d=y[2]
    m3_d=y[3]
    m0_l=y[4]
    m1_l=y[5]
    m2_l=y[6]
    m3_l=y[7]
    Sd=y[8]
    Sl=y[9]

    print("\033[1;31m" + '''current time is''',t,'''s/''',tspan[1],'''s''')
    
    eet1 = (m3_d-m3_l)/(m3_d+m3_l)
    print('\033[32m'+'''enantiomeric excess is''',eet1)
    print('\033[39m')
    
    Lmean_d = np.abs(m1_d/m0_d)
    σd = np.sqrt( np.abs(m2_d-2*Lmean_d*m1_d+Lmean_d**2*m0_d)/m0_d )
    Lmean_l=m1_l/m0_l
    σl=np.sqrt( np.abs(m2_l-2*Lmean_l*m1_l+Lmean_l**2*m0_l)/m0_l )
    
    
    Lmin_d = max(0.25,Lmean_d - 4*σd)
    Lmax_d = Lmean_d + 4*σd
    
    Lmin_l = max(0.25,Lmean_l - 4*σl)
    Lmax_l = Lmean_l + 4*σl
    
    bnds_d=[Lmin_d,Lmax_d] 
    sol_d, lambdas_d= maxent_reconstruct_c1_1(mu=y[0:4] ,bnds=bnds_d)
    bnds_l=[Lmin_l,Lmax_l]
    sol_l, lambdas_l= maxent_reconstruct_c1_2(mu=y[4:8] ,bnds=bnds_l)
    
    '''Growth functions'''
    def h_d(l,k):
        return l**k*sol_d(l)*G_d(Sd,T,l)
    def h_l(l,k):
        return l**k*sol_l(l)*G_l(Sl,T,l)
    
    '''Breakage functions'''
    def fd(L):
        def vd(l): return a(l)*g(L,l)*sol_d(l)
        result = quad(vd,L,bnds_d[1],epsabs=tol1)[0]
        return result
    
    def fl(L):
        def vl(l): return a(l)*g(L,l)*sol_l(l)
        result = quad(vl,L,bnds_l[1],epsabs=tol1)[0]
        return result

    def momd(L,Sd,T,k):
        return L**k * ( k*L**(-1)*G_d(Sd,T,L)*sol_d(L) + Kbg*(fd(L)-a(L)*sol_d(L)) )
    
    def moml(L,SL,T,k):
        return L**k * ( k*L**(-1)*G_l(Sl,T,L)*sol_l(L) + Kbg*(fl(L)-a(L)*sol_l(L)) )
    
    k=0
    dm0dt_d = quad(momd,bnds_d[0],bnds_d[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_d(bnds_d[1],k) - h_d(bnds_d[0],k) )
    dm0dt_l = quad(moml,bnds_l[0],bnds_l[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_l(bnds_l[1],k) - h_l(bnds_l[0],k) )
    k=1
    dm1dt_d = quad(momd,bnds_d[0],bnds_d[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_d(bnds_d[1],k) - h_d(bnds_d[0],k) )
    dm1dt_l = quad(moml,bnds_l[0],bnds_l[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_l(bnds_l[1],k) - h_l(bnds_l[0],k) )
    k=2
    dm2dt_d = quad(momd,bnds_d[0],bnds_d[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_d(bnds_d[1],k) - h_d(bnds_d[0],k) )
    dm2dt_l = quad(moml,bnds_l[0],bnds_l[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_l(bnds_l[1],k) - h_l(bnds_l[0],k) )
    k=3
    dm3dt_d = quad(momd,bnds_d[0],bnds_d[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_d(bnds_d[1],k) - h_d(bnds_d[0],k) )
    dm3dt_l = quad(moml,bnds_l[0],bnds_l[1],epsabs=tol1,epsrel=tol2,args=(Sd,T,k))[0] - ( h_l(bnds_l[1],k) - h_l(bnds_l[0],k) )
    
    dSddt = -1/(scale*Lr**3*γ_d(T))*dm3dt_d + Rd(Sd,Sl,T)
    dSldt = -1/(scale*Lr**3*γ_l(T))*dm3dt_l + Rl(Sd,Sl,T)

    print('[Lmin_d,Lmax_d] = ',[Lmin_d,Lmax_d])
    print('[Lmin_l,Lmax_l] = ',[Lmin_l,Lmax_l])
    print('dmkdt = \n',[dm0dt_d,dm0dt_l], '\n', [dm1dt_d,dm1dt_l], '\n', [dm2dt_d,dm2dt_l], '\n', [dm3dt_d,dm3dt_l])
        
    return(dm0dt_d,dm1dt_d,dm2dt_d,dm3dt_d,dm0dt_l,dm1dt_l,dm2dt_l,dm3dt_l,dSddt,dSldt)


r=solve_ivp(moments ,tspan, initial_values, method='BDF',t_eval=teval, jac=None, rtol=1e-3)




'''Γράφημα εξέλιξης των ροπών'''
pp.figure(0)
pp.plot(r.t,r.y[0,:],'-b',r.t,r.y[4,:],'-g')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('m0(t)',{"fontsize":16})
pp.legend(('D','L'),loc=0)
pp.title('Evolution of zeroth moment')
pp.show()

pp.figure(1)
pp.plot(r.t,r.y[1,:],'-b',r.t,r.y[5,:],'-g')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('m1(t)',{"fontsize":16})
pp.legend(('D','L'),loc=0)
pp.title('Evolution of first moment')
pp.show()

pp.figure(2)
pp.plot(r.t,r.y[2,:],'-b',r.t,r.y[6,:],'-g')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('m2(t)',{"fontsize":16})
pp.legend(('D','L'),loc=0)
pp.title('Evolution of second moment')
pp.show()

pp.figure(3)
pp.plot(r.t,r.y[3,:],'-b',r.t,r.y[7,:],'-g')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('m3(t)',{"fontsize":16})
pp.legend(('D','L'),loc=0)
pp.title('Evolution of third moment')
pp.show()

'''Supersaturation'''
pp.figure(4)
pp.plot(r.t,r.y[8,:],'-')
pp.plot(r.t,r.y[9,:],'-')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('Supersaturations',{"fontsize":16})
pp.legend(('Sd','Sl'),loc=0)
pp.show()

'''Enantiomeric Excess'''
eet = (r.y[3,:] - r.y[7,:])/(r.y[3,:] + r.y[7,:])
pp.figure(5)
pp.plot(r.t,eet)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('ee',{"fontsize":16})
pp.title('Evolution of enantiomeric excess')
pp.show()


end=time.time()
print('''total time is ''', (end-start)/60, '''min''')

'''End of script notification'''

message= 'Script has finished running'
notification.notify(message= message,
                    app_icon = None,
                    timeout= 10,
                    toast=False)


'''Comsol comparison'''
m0c_d = [12.50652264358598			 ,
 13.121925009293417           ,
 13.016695273763391           ,
 12.183464472735553           ,
 10.986907245374907           ,
 10.011352634691285           ,
 9.242341953907484            ,
 8.537640417736824            ,
 7.864221131382995            ,
 7.298205298541467            ,
 6.8344708978362005           ,
 6.454527208666454            ,
 6.143312417473284            ,
 5.8918302400877645           ,
 5.696469577842531            ,
 5.539675743586124            ,
 5.419143020989334            ,
 5.3226288514202915           ,
 5.247864984166872            ,
 5.1909224070315565           ,
 5.144197132447279            ,
 5.10751200933419             ,
 5.0796000926277              ,
 5.058198085930534            ,
 5.041394823717017            ,
 5.027754404771537            ,
 5.016534334312364            ,
 5.007364351427499            ,
 4.999954043717016            ,
 4.993999813145828            ,
 4.989199520467224            ,
 4.985285718786547            ,
 4.9820436771336984           ,
 4.979310695194239            ,
 4.976965407706208            ,
 4.974916160260919            ,
 4.9730925182772685           ,
 4.971439943003093            ,
 4.969916373299986            ,
 4.968489687477042            ,
 4.967135585821247            ,
 4.965835794934272            ,
 4.964576605202827            ,
 4.963347734840876            ,
 4.962141473710324            ,
 4.960952045048057            ,
 4.959775127534786            ,
 4.958607494738568            ,
 4.957446741781609            ,
 4.956291078580556            ,
 4.955139174030332            ,
 4.953990039141626            ,
 4.952842939685725            ,
 4.951697331013537            ,
 4.950552809443943            ,
 4.949409076019413            ,
 4.948265909503764            ,
 4.947123146289245            ,
 4.945980665461352            ,
 4.944838377711071            ,
 4.94369621711158             ,
 4.942554135024037            ,
 4.941412095584538            ,
 4.940270072363931            ,
 4.939128045897666            ,
 4.937986001859738            ,
 4.936843929714025            ,
 4.935701821717483            ,
 4.934559672189769            ,
 4.933417476963919            ,
 4.932275232994623            ,
 4.931132938056925            ,
 4.929990590534522            ,
 4.928848189256647            ,
 4.927705733382615            ,
 4.9265632223137255           ,
 4.925420655630109            ,
 4.924278033043858            ,
 4.923135354363968            ,
 4.921992619471412            ,
 4.920849828299973            ,
 4.919706980822661            ,
 4.918564077041472            ,
 4.917421116979807            ,
 4.91627810067702             ,
 4.915135028184271            ,
 4.913991899561467            ,
 4.912848714875159            ,
 4.911705474196654            ,
 4.910562177600928            ,
 4.909418825165809            ,
 4.908275416971091            ,
 4.907131953098088            ,
 4.905988433629294            ,
 4.904844858648099            ,
 4.903701228238514            ,
 4.9025575424851375           ,
 4.901413801472904            ,
 4.900270005286929            ,
 4.899126154012705            ,
 4.8979822477358566           ]
m0c_l = [8.337681041943345            ,
8.744334943501263            ,
8.668200201388442            ,
8.086410733349119            ,
7.269414213851905            ,
6.610135508501739            ,
6.093694269165776            ,
5.622409190012067            ,
5.175184138936753            ,
4.799561822526662            ,
4.491871892547917            ,
4.240588332805382            ,
4.034658995854571            ,
3.8689132206876713           ,
3.740725822654998            ,
3.63827746794875             ,
3.55990834855408             ,
3.497511606165078            ,
3.449654774198036            ,
3.4134555930643002           ,
3.3840508404487775           ,
3.361378449725671            ,
3.3445338560239075           ,
3.3320288005390286           ,
3.322552133032081            ,
3.3151823631882196           ,
3.3094719839046665           ,
3.305184962794551            ,
3.3021156066750605           ,
3.3000447892997427           ,
3.298757871008908            ,
3.2980685046443385           ,
3.29782944577899             ,
3.297930257505345            ,
3.298288931376088            ,
3.2988436319075976           ,
3.2995469275422384           ,
3.3003622289468133           ,
3.3012614740927435           ,
3.3022233708480453           ,
3.3032319182638195           ,
3.3042751597490776           ,
3.3053441790374234           ,
3.3064323291278863           ,
3.307534656266514            ,
3.3086474731530497           ,
3.3097680407520005           ,
3.3108943292031627           ,
3.3120248374072836           ,
3.313158457296326            ,
3.314294372169241            ,
3.315431980926703            ,
3.3165708418008526           ,
3.3177106306395587           ,
3.3188511099998768           ,
3.3199921062622235           ,
3.321133492705453            ,
3.3222751770110333           ,
3.3234170920522597           ,
3.3245591891182844           ,
3.325701432937074            ,
3.326843798025066            ,
3.3279862660145385           ,
3.3291288236997083           ,
3.330271461610502            ,
3.3314141729740445           ,
3.3325569529591137           ,
3.333699798128096            ,
3.334842706042319            ,
3.3359856749722803           ,
3.337128703695032            ,
3.3382717913429265           ,
3.3394149373000657           ,
3.34055814112523             ,
3.341701402498962            ,
3.342844721185172            ,
3.3439880970047096           ,
3.345131529816295            ,
3.346275019503948            ,
3.3474185659678524           ,
3.3485621691183476           ,
3.3497058288717647           ,
3.3508495451478355           ,
3.3519933178678283           ,
3.3531371469534403           ,
3.354281032326215            ,
3.355424973907238            ,
3.356568971616677            ,
3.357713025374067            ,
3.3588571350980283           ,
3.3600013007064073           ,
3.361145522116599            ,
3.3622897992451866           ,
3.3634341320083374           ,
3.3645785203217806           ,
3.3657229641009314           ,
3.366867463260871            ,
3.3680120177163753           ,
3.3691566273820293           ,
3.3703012921723317           ,
3.3714460120016367           ]
m1c_d = [6.252494958772408			,
 6.296879301739941         ,
 6.17143549012709          ,
 5.827423188050065         ,
 5.417336528738316         ,
 5.074779946791058         ,
 4.779693908972337         ,
 4.499633660983686         ,
 4.236659816094101         ,
 4.012191300026418         ,
 3.8250472590435094        ,
 3.668027935057888         ,
 3.538925787577104         ,
 3.4342122948051714        ,
 3.351303474178598         ,
 3.28489576632095          ,
 3.233080761764492         ,
 3.19162203567396          ,
 3.1596174474950454        ,
 3.1345576607106453        ,
 3.114317340923259         ,
 3.0985645582184884        ,
 3.086452549474913         ,
 3.077022814260112         ,
 3.0695051729463105        ,
 3.063373228558154         ,
 3.0583422754997667        ,
 3.0542370096033036        ,
 3.0509048532949095        ,
 3.0481964497984615        ,
 3.0459744377874345        ,
 3.044123480280556         ,
 3.042553389714277         ,
 3.0411962205662246        ,
 3.040001028718566         ,
 3.0389291399944907        ,
 3.0379508449094637        ,
 3.0370432618099246        ,
 3.0361888670744808        ,
 3.035374355962179         ,
 3.0345896993379897        ,
 3.0338273672596308        ,
 3.0330817135779067        ,
 3.0323485054186867        ,
 3.031624570423443         ,
 3.0309075335116726        ,
 3.030195619323549         ,
 3.029487503071298         ,
 3.0287821976463443        ,
 3.028078968433434         ,
 3.027377269243869         ,
 3.026676694320412         ,
 3.025976942472905         ,
 3.025277790317477         ,
 3.024579072313899         ,
 3.0238806658829986        ,
 3.0231824803226233        ,
 3.022484448562128         ,
 3.021786521035455         ,
 3.021088661133715         ,
 3.0203908418331604        ,
 3.019693043196597         ,
 3.018995250523361         ,
 3.0182974529803333        ,
 3.017599642589598         ,
 3.016901813480259         ,
 3.016203961335808         ,
 3.0155060829856835        ,
 3.0148081761060714        ,
 3.014110238994805         ,
 3.013412270410437         ,
 3.012714269449334         ,
 3.0120162354581823        ,
 3.0113181679675995        ,
 3.0106200666442673        ,
 3.0099219312550174        ,
 3.009223761640737         ,
 3.008525557697022         ,
 3.007827319359848         ,
 3.007129046595131         ,
 3.006430739390908         ,
 3.005732397751639         ,
 3.0050340216939957        ,
 3.0043356112436634        ,
 3.003637166433115         ,
 3.0029386872998156        ,
 3.0022401738849966        ,
 3.0015416262327053        ,
 3.000843044389069         ,
 3.000144428401809         ,
 2.9994457783198603        ,
 2.99874709419303          ,
 2.998048376071805         ,
 2.997349624007179         ,
 2.9966508380505488        ,
 2.9959520182535986        ,
 2.995253164668245         ,
 2.9945542773465776        ,
 2.993855356340785         ,
 2.9931564017031924        ,
 2.9924574134861874        ]
m1c_l = [4.1683276310849955        , 
4.181598023830119         , 
4.0921202513079855        , 
3.8530196293807055        , 
3.573749696375014         , 
3.342616929872785         , 
3.144890524639103         , 
2.9582868314111037        , 
2.7837692978143727        , 
2.6350815019410745        , 
2.5112207806314006        , 
2.407580543304278         , 
2.322507159701725         , 
2.25382161917888          , 
2.1997312571125236        , 
2.1566348593426907        , 
2.1232388400698774        , 
2.096743100270438         , 
2.076529071825997         , 
2.0608780713804467        , 
2.048450878567226         , 
2.039025108876068         , 
2.0320239194325964        , 
2.026810393457511         , 
2.02286722772477          , 
2.019861882556856         , 
2.0176174578237043        , 
2.0160159016654133        , 
2.0149480030166584        , 
2.014306663856847         , 
2.013994986869525         , 
2.013933011493797         , 
2.0140590491897647        , 
2.0143269946983855        , 
2.0147024028236165        , 
2.015159178969273         , 
2.015677339752765         , 
2.0162415712827646        , 
2.016840221142982         , 
2.0174645048055466        , 
2.0181078473201586        , 
2.0187653459540136        , 
2.0194333491383025        , 
2.020109137918284         , 
2.020790689048539         , 
2.021476499231846         , 
2.022165453832034         , 
2.0228567282333882        , 
2.023549713595697         , 
2.024243961186376         , 
2.0249391408014366        , 
2.025635009837028         , 
2.0263313903443874        , 
2.027028152033652         , 
2.0277251996910595        , 
2.028422463872725         , 
2.0291198940328106        , 
2.0298174534580258        , 
2.0305151155405334        , 
2.0312128610410074        , 
2.0319106760821           , 
2.0326085506799383        , 
2.0333064776714114        , 
2.0340044519317964        , 
2.0347024698054574        , 
2.035400528692401         , 
2.0360986267486627        , 
2.0367967626696957        , 
2.0374949355349847        , 
2.0381931446946946        , 
2.0388913896903746        , 
2.0395896701967806        , 
2.040287985981632         , 
2.0409863368764105        , 
2.0416847227561568        , 
2.042383143525179         , 
2.043081599107155         , 
2.0437800894382434        , 
2.044478614462537         , 
2.045177174128822         , 
2.0458757683885627        , 
2.0465743971944717        , 
2.047273060499746         , 
2.047971758257445         , 
2.048670490420251         , 
2.049369256940344         , 
2.050068057769314         , 
2.050766892858141         , 
2.0514657621572883        , 
2.0521646656166914        , 
2.052863603185853         , 
2.0535625748139354        , 
2.0542615804497224        , 
2.0549606200417565        , 
2.0556596935383493        , 
2.056358800887631         , 
2.057057942037568         , 
2.0577571169359907        , 
2.0584563255306327        , 
2.0591555677691775        , 
2.0598548435992172        ] 
m2c_d = [3.133692921555005			, 
 3.085540785569971         , 
 3.039665963170574         , 
 2.943353901890781         , 
 2.83549483090815          , 
 2.7410219191665215        , 
 2.6538353189659207        , 
 2.568463839628427         , 
 2.4878384222294962        , 
 2.41716086724294          , 
 2.3566241933194427        , 
 2.304730240761354         , 
 2.261419057940884         , 
 2.2258725686975644        , 
 2.197197037061994         , 
 2.1740933033324903        , 
 2.155787122275487         , 
 2.1411184684363187        , 
 2.1296870087729856        , 
 2.1205941303532003        , 
 2.113287782324679         , 
 2.10756836605373          , 
 2.103094796702103         , 
 2.099540593930626         , 
 2.0966524345609336        , 
 2.094262762695611         , 
 2.0922741019082998        , 
 2.090618549357231         , 
 2.0892358434079377        , 
 2.088069810347883         , 
 2.0870711558869077        , 
 2.086199705645868         , 
 2.0854244593970086        , 
 2.0847220949630945        , 
 2.084075070045853         , 
 2.0834700484069937        , 
 2.082896811157024         , 
 2.082347528334264         , 
 2.0818162357859444        , 
 2.081298423573439         , 
 2.080790699754703         , 
 2.080290519758            , 
 2.079795975725001         , 
 2.079305637058333         , 
 2.0788184312931333        , 
 2.0783335552017586        , 
 2.0778504080403515        , 
 2.07736854116795          , 
 2.076887619956005         , 
 2.076407395079127         , 
 2.0759276809314264        , 
 2.0754483394513055        , 
 2.0749692680223997        , 
 2.074490390434681         , 
 2.0740116501326367        , 
 2.0735330051760776        , 
 2.07305442448314          , 
 2.0725758850324305        , 
 2.072097369781744         , 
 2.0716188661215127        , 
 2.0711403647265914        , 
 2.070661858704296         , 
 2.070183342962799         , 
 2.0697048137430545        , 
 2.0692262682721267        , 
 2.068747704506587         , 
 2.068269120942629         , 
 2.067790516475416         , 
 2.067311890295934         , 
 2.0668332418130384        , 
 2.0663545705977198        , 
 2.0658758763403706        , 
 2.06539715882022          , 
 2.0649184178821636        , 
 2.06443965341987          , 
 2.063960865363163         , 
 2.0634820536687717        , 
 2.063003218313402         , 
 2.0625243592886506        , 
 2.0620454765972145        , 
 2.061566570250076         , 
 2.061087640264411         , 
 2.0606086866620483        , 
 2.060129709468283         , 
 2.0596507087110503        , 
 2.0591716844202415        , 
 2.05869263662724          , 
 2.0582135653645555        , 
 2.057734470665548         , 
 2.0572553525642343        , 
 2.056776211095117         , 
 2.05629704629307          , 
 2.055817858193263         , 
 2.055338646831074         , 
 2.0548594122420565        , 
 2.054380154461886         , 
 2.053900873526339         , 
 2.053421569471274         , 
 2.0529422423325916        , 
 2.052462892146247         , 
 2.051983518948224         ] 
m2c_l = [2.0891264194444688        ,
2.0418995283784347        ,
2.0077162241746183        ,
1.9396425910413666        ,
1.8655296351953552        ,
1.8013802317646737        ,
1.7427270214673092        ,
1.685769936361392         ,
1.632219502301999         ,
1.5854416729806111        ,
1.545484830887034         ,
1.5113766244770328        ,
1.4830531927874346        ,
1.4599900037683433        ,
1.4415556092243087        ,
1.4268533308933187        ,
1.4153591593065216        ,
1.4063035020633854        ,
1.3993990238530374        ,
1.394043344513084         ,
1.3898934409428636        ,
1.3868103022230684        ,
1.3845628215928567        ,
1.3829326608863939        ,
1.3817522545198122        ,
1.3809167759318342        ,
1.3803636508632113        ,
1.380044991532854         ,
1.3799164862176438        ,
1.379937172693562         ,
1.3800718618723247        ,
1.3802924482697931        ,
1.3805775595782699        ,
1.3809112495966267        ,
1.3812815744707148        ,
1.381679487589496         ,
1.3820980953007145        ,
1.3825321564580486        ,
1.3829777156022334        ,
1.3834318108379406        ,
1.3838922360643753        ,
1.3843573519982255        ,
1.38482594119339          ,
1.3852970996717655        ,
1.3857701567328853        ,
1.3862446155545496        ,
1.3867201088871477        ,
1.3871963658575799        ,
1.3876731870807986        ,
1.388150426073477         ,
1.3886279754168613        ,
1.3891057564901974        ,
1.389583711869384         ,
1.390061799707099         ,
1.3905399895805624        ,
1.3910182594282032        ,
1.3914965932939871        ,
1.391974979669836         ,
1.392453410280184         ,
1.392931879192748         ,
1.3934103821692896        ,
1.3938889161926422        ,
1.3943674791229825        ,
1.394846069448554         ,
1.395324686105458         ,
1.3958033283477211        ,
1.396281995653886         ,
1.3967606876601073        ,
1.397239404112633         ,
1.3977181448335778        ,
1.3981969096972682        ,
1.3986756986132083        ,
1.3991545115144501        ,
1.3996333483493903        ,
1.4001122090762073        ,
1.4005910936590609        ,
1.4010700020655567        ,
1.401548934265074         ,
1.4020278902277246        ,
1.402506869923674         ,
1.4029858733227725        ,
1.4034649003943338        ,
1.4039439511070677        ,
1.4044230254290422        ,
1.404902123327722         ,
1.4053812447700211        ,
1.405860389722363         ,
1.4063395581507288        ,
1.4068187500207336        ,
1.407297965297681         ,
1.4077772039466008        ,
1.408256465932326         ,
1.408735751219486         ,
1.4092150597725805        ,
1.4096943915559763        ,
1.4101737465339506        ,
1.410653124670692         ,
1.4111325259303407        ,
1.411611950276975         ,
1.4120913976746452        ,
1.4125708680873659        ]
m3c_d = [1.5744788831071137		, 
1.531293390132395         , 
1.532133106840486         , 
1.5340364199475067        , 
1.536358232934008         , 
1.5381711268674676        , 
1.5395349549002486        , 
1.5407684698843984        , 
1.541980627920244         , 
1.5429920551201608        , 
1.5437991558125765        , 
1.5444366314293052        , 
1.5449059788757789        , 
1.5452303093867492        , 
1.5454113192518102        , 
1.54549346452652          , 
1.5454827378068376        , 
1.545409722655332         , 
1.5452779260823637        , 
1.5450992721081116        , 
1.5448908056032464        , 
1.5446527075771637        , 
1.5443885594557152        , 
1.5441045802136817        , 
1.5438054764321012        , 
1.543494152396232         , 
1.5431726386747155        , 
1.5428427810088603        , 
1.5425063616369188        , 
1.5421649955760308        , 
1.541820019708431         , 
1.5414724583018913        , 
1.5411230578430817        , 
1.540772351942222         , 
1.5404207231578126        , 
1.5400684480780646        , 
1.5397157268046513        , 
1.5393627025874517        , 
1.5390094761576951        , 
1.5386561169244064        , 
1.538302671784058         , 
1.537949171828491         , 
1.5375956372326234        , 
1.53724208071058          , 
1.5368885099210468        , 
1.536534929139256         , 
1.5361813404189286        , 
1.5358277443979576        , 
1.5354741408519226        , 
1.535120529066375         , 
1.534766908081796         , 
1.534413276849702         , 
1.5340596343285902        , 
1.5337059795393257        , 
1.533352311594118         , 
1.5329986297084413        , 
1.5326449332023906        , 
1.532291221495767         , 
1.5319374940997337        , 
1.5315837506069592        , 
1.5312299906814137        , 
1.5308762140484962        , 
1.5305224204859282        , 
1.5301686098155807        , 
1.5298147818962782        , 
1.5294609366176024        , 
1.5291070738945658        , 
1.528753193663122         , 
1.5283992958764707        , 
1.528045380501792         , 
1.527691447517782         , 
1.5273374969124134        , 
1.5269835286812294        , 
1.5266295428258863        , 
1.526275539352986         , 
1.5259215182730983        , 
1.5255674796000294        , 
1.5252134233501495        , 
1.524859349541908         , 
1.52450525819542          , 
1.5241511493321362        , 
1.5237970229745665        , 
1.5234428791460868        , 
1.523088717870754         , 
1.5227345391731668        , 
1.5223803430783582        , 
1.5220261296117137        , 
1.5216718987988866        , 
1.5213176506657622        , 
1.5209633852383901        , 
1.5206091025429587        , 
1.5202548026057712        , 
1.5199004854532137        , 
1.5195461511117414        , 
1.5191917996078597        , 
1.5188374309681174        , 
1.5184830452190918        , 
1.5181286423873999        , 
1.5177742224996655        , 
1.5174197855825238        , 
1.5170653316626275        ] 
m3c_l = [1.0496509535071608	,
1.0098861086577646        ,
1.0083585622999383        ,
1.0078446371242726        ,
1.0082600494113052        ,
1.00869590204234          ,
1.0090617448880896        ,
1.0095455571411107        ,
1.010159972429468         ,
1.010766234078547         ,
1.011340628061683         ,
1.0118996523667039        ,
1.0124427050073939        ,
1.0129728606412134        ,
1.0134670258365892        ,
1.0139385105865586        ,
1.014382099258615         ,
1.014812425257703         ,
1.0152164564759085        ,
1.0156020594136215        ,
1.0159851298962315        ,
1.0163604028886237        ,
1.0167273249021433        ,
1.0170885517898804        ,
1.0174477013513579        ,
1.0178078824926449        ,
1.0181696281836181        ,
1.0185320230330694        ,
1.0188940620265041        ,
1.0192551679554163        ,
1.0196151719571425        ,
1.0199741345084434        ,
1.0203321897126174        ,
1.0206894677087672        ,
1.0210460776113894        ,
1.0214021139316078        ,
1.0217576635292152        ,
1.022112807240029         ,
1.0224676183316614        ,
1.0228221607585921        ,
1.0231764886016774        ,
1.0235306466647522        ,
1.0238846716585732        ,
1.0242385934947655        ,
1.0245924364516223        ,
1.024946220158469         ,
1.025299960417804         ,
1.0256536698978203        ,
1.0260073587180967        ,
1.0263610349393884        ,
1.0267147049687027        ,
1.0270683738897384        ,
1.0274220457303227        ,
1.0277757236772203        ,
1.0281294102483929        ,
1.0284831074307499        ,
1.0288368167900799        ,
1.0291905395585983        ,
1.0295442767045277        ,
1.0298980289873023        ,
1.0302517970013005        ,
1.030605581210475         ,
1.0309593819757419        ,
1.0313131995766245        ,
1.0316670342283583        ,
1.0320208860954176        ,
1.0323747553021676        ,
1.0327286419413215        ,
1.0330825460805357        ,
1.033436467767736         ,
1.0337904070352077        ,
1.0341443639029146        ,
1.0344983383810538        ,
1.0348523304721076        ,
1.0352063401724674        ,
1.035560367473689         ,
1.035914412363522         ,
1.0362684748266917        ,
1.036622554845541         ,
1.0369766524005153        ,
1.0373307674705687        ,
1.0376849000334647        ,
1.0380390500660324        ,
1.0383932175443629        ,
1.038747402443951         ,
1.0391016047398332        ,
1.0394558244066743        ,
1.039810061418851         ,
1.040164315750507         ,
1.0405185873756118        ,
1.0408728762679784        ,
1.04122718240132          ,
1.0415815057492566        ,
1.0419358462853376        ,
1.0422902039830582        ,
1.0426445788158663        ,
1.0429989707571825        ,
1.0433533797804047        ,
1.0437078058589087        ,
1.0440622489660534        ,
1.0444167090751928        ]
Sc_d = [1.0002826682011634		,
 1.0225641780924846        ,
 1.0241469084389712        ,
 1.0232750793614356        ,
 1.0218886837424352        ,
 1.0210941115855783        ,
 1.0204922924200353        ,
 1.0197393423564387        ,
 1.019119899888542         ,
 1.018572163988827         ,
 1.018091923975762         ,
 1.0176749666728417        ,
 1.0173007786573929        ,
 1.01695741157716          ,
 1.0166127695064722        ,
 1.0163279000710042        ,
 1.0161305925789517        ,
 1.0159839326125664        ,
 1.015855728694981         ,
 1.0157292293813813        ,
 1.0155997334824898        ,
 1.0154924558573106        ,
 1.0154239486159484        ,
 1.0153828956865847        ,
 1.0153526869217857        ,
 1.015326361743416         ,
 1.0152983394438315        ,
 1.015264815368232         ,
 1.0152317343005184        ,
 1.015205097976622         ,
 1.0151834146059349        ,
 1.0151641660754651        ,
 1.0151472259098917        ,
 1.0151327456534007        ,
 1.0151198891248805        ,
 1.0151075513866152        ,
 1.0150953272846954        ,
 1.015083388794951         ,
 1.0150720478662787        ,
 1.0150618698700005        ,
 1.0150532666206766        ,
 1.0150464165302342        ,
 1.0150412432182057        ,
 1.0150374702732294        ,
 1.0150346866147322        ,
 1.01503237058833          ,
 1.0150300862620198        ,
 1.0150276480493823        ,
 1.0150251058133077        ,
 1.0150226316853823        ,
 1.0150204010452129        ,
 1.015018522026909         ,
 1.0150170149646534        ,
 1.0150158266016736        ,
 1.0150148653460633        ,
 1.0150140391935611        ,
 1.0150132811280523        ,
 1.0150125604794145        ,
 1.0150118774873267        ,
 1.015011249411858         ,
 1.0150106955840588        ,
 1.015010226619883         ,
 1.0150098407916701        ,
 1.0150095262556937        ,
 1.0150092661236199        ,
 1.0150090441716295        ,
 1.0150088485302644        ,
 1.0150086728426935        ,
 1.0150085153561652        ,
 1.0150083767822722        ,
 1.0150082581690663        ,
 1.015008159473039         ,
 1.0150080790836518        ,
 1.015008014172785         ,
 1.015007961445262         ,
 1.0150079178879257        ,
 1.0150078812415448        ,
 1.0150078501245308        ,
 1.0150078238508333        ,
 1.0150078021225244        ,
 1.0150077847219647        ,
 1.0150077713162353        ,
 1.0150077614043866        ,
 1.0150077543621903        ,
 1.01500774954814          ,
 1.015007746401929         ,
 1.015007744495078         ,
 1.015007743546704         ,
 1.0150077433859344        ,
 1.0150077439046505        ,
 1.0150077450194668        ,
 1.0150077466369187        ,
 1.0150077486512084        ,
 1.0150077509490127        ,
 1.0150077534216175        ,
 1.015007755979155         ,
 1.0150077585561765        ,
 1.0150077611094315        ,
 1.0150077636147805        ,
 1.0150077660582515        ,
 1.0150077684295666        ]
Sc_l = [1.0001894313651514        ,
 1.022620906629734         ,
 1.0242179847682447        ,
 1.0233254880325426        ,
 1.0219265620082416        ,
 1.0211271272047848        ,
 1.0205152576411354        ,
 1.019755843564071         ,
 1.0191315179280682        ,
 1.018581920940614         ,
 1.0180970649625216        ,
 1.0176785216834894        ,
 1.017304275768971         ,
 1.0169615011973365        ,
 1.0166167627767078        ,
 1.0163307007771958        ,
 1.016132468167476         ,
 1.0159856541058343        ,
 1.0158575564365149        ,
 1.0157312960680942        ,
 1.0156017292199626        ,
 1.015494034328526         ,
 1.0154249920407614        ,
 1.0153837346465489        ,
 1.0153534806138222        ,
 1.01532716993136          ,
 1.0152992435340495        ,
 1.0152657840137997        ,
 1.0152326160676235        ,
 1.0152058637455734        ,
 1.0151841227361977        ,
 1.0151648356497347        ,
 1.0151478462096684        ,
 1.0151333208551945        ,
 1.0151204370809337        ,
 1.015108086507994         ,
 1.015095840547167         ,
 1.0150838821655221        ,
 1.015072507944092         ,
 1.0150622852204558        ,
 1.0150536298290527        ,
 1.0150467242483665        ,
 1.0150414985660594        ,
 1.0150376806508241        ,
 1.0150348643677967        ,
 1.0150325305906267        ,
 1.0150302394787887        ,
 1.015027797854467         ,
 1.0150252505301194        ,
 1.0150227675633507        ,
 1.015020524673236         ,
 1.0150186317939627        ,
 1.0150171110853337        ,
 1.0150159107017291        ,
 1.0150149397384656        ,
 1.0150141060447235        ,
 1.0150133420033698        ,
 1.0150126162892212        ,
 1.015011928522359         ,
 1.0150112956827977        ,
 1.0150107371062007        ,
 1.0150102635310676        ,
 1.0150098734490944        ,
 1.0150095551405471        ,
 1.0150092917616251        ,
 1.0150090670468344        ,
 1.015008869025776         ,
 1.0150086912334444        ,
 1.0150085318353173        ,
 1.015008391493511         ,
 1.0150082712474298        ,
 1.015008171059314         ,
 1.0150080893271474        ,
 1.0150080232320595        ,
 1.0150079694667844        ,
 1.0150079250039918        ,
 1.0150078875642015        ,
 1.0150078557427964        ,
 1.015007828838097         ,
 1.015007806541884         ,
 1.0150077886296915        ,
 1.015007774766268         ,
 1.015007764447948         ,
 1.0150077570469331        ,
 1.0150077519179992        ,
 1.0150077484952873        ,
 1.015007746344603         ,
 1.0150077451808663        ,
 1.0150077448286103        ,
 1.0150077451769317        ,
 1.0150077461405           ,
 1.0150077476234494        ,
 1.015007749519182         ,
 1.0150077517126124        ,
 1.0150077540933389        ,
 1.0150077565703997        ,
 1.015007759076465         ,
 1.0150077615671347        ,
 1.0150077640173372        ,
 1.0150077664119215        ,
 1.015007768740155         ]



m0c_d = [x / 100 for x in m0c_d]
m0c_l = [x / 100 for x in m0c_l]

m1c_d = [x / 100 for x in m1c_d]
m1c_l = [x / 100 for x in m1c_l]

m2c_d = [x / 100 for x in m2c_d]
m2c_l = [x / 100 for x in m2c_l]

m3c_d = [x / 100 for x in m3c_d]
m3c_l = [x / 100 for x in m3c_l]

diff_m3=[]
zip_object = zip(m3c_d, m3c_l)
for m3c_d_i, m3c_l_i in zip_object:
    diff_m3.append(m3c_d_i-m3c_l_i)
sum_m3 = [sum(x) for x in zip(m3c_d, m3c_l)]

eec = [m/n for m, n in zip(diff_m3,sum_m3)]


pp.figure(9)
#Change the figure size
pp.figure(figsize=[16, 12])
pp.subplot(2,2,1)
pp.plot(r.t,r.y[0,:]/initial_m_d[0],'.r',r.t,np.array(m0c_d)/initial_m_d[0],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m0(t)/m0(0)',{"fontsize":16})
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.title('(a) Evolution of zeroth moment',fontsize=15)
pp.subplot(2,2,2)
pp.plot(r.t,r.y[1,:]/initial_m_d[1],'.r',r.t,np.array(m1c_d)/initial_m_d[1],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m1(t)/m1(0)',{"fontsize":16})
pp.title('(b) Evolution of first moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.subplot(2,2,3)
pp.plot(r.t,r.y[2,:]/initial_m_d[2],'.r',r.t,np.array(m2c_d)/initial_m_d[2],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m2(t)/m2(0)',{"fontsize":16})
pp.title('(c) Evolution of second moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.subplot(2,2,4)
pp.plot(r.t,r.y[3,:]/initial_m_d[3],'.r',r.t,np.array(m3c_d)/initial_m_d[3],'-b')
pp.ylim([0.8, 1.2])
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m3(t)/m3(0)',{"fontsize":16})
pp.title('(d) Evolution of third moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='lower right',borderaxespad=0.1, fontsize=15)
pp.suptitle('Enantiomer D', x=0.5, y=0.95, fontsize=17, fontweight='700',)

pp.figure(10)
#Change the figure size
pp.figure(figsize=[16, 12])
pp.subplot(2,2,1)
pp.plot(r.t,r.y[4,:]/initial_m_l[0],'.r',r.t,np.array(m0c_l)/initial_m_l[0],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m0(t)/m0(0)',{"fontsize":16})
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.title('(a) Evolution of zeroth moment',fontsize=15)
pp.subplot(2,2,2)
pp.plot(r.t,r.y[5,:]/initial_m_l[1],'.r',r.t,np.array(m1c_l)/initial_m_l[1],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m1(t)/m1(0)',{"fontsize":16})
pp.title('(b) Evolution of first moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.subplot(2,2,3)
pp.plot(r.t,r.y[6,:]/initial_m_l[2],'.r',r.t,np.array(m2c_l)/initial_m_l[2],'-b')
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m2(t)/m2(0)',{"fontsize":16})
pp.title('(c) Evolution of second moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.subplot(2,2,4)
pp.plot(r.t,r.y[7,:]/initial_m_l[3],'.r',r.t,np.array(m3c_l)/initial_m_l[3],'-b')
pp.ylim([0.8, 1.2])
pp.xlabel('time',{"fontsize":16})
pp.ylabel('m3(t)/m3(0)',{"fontsize":16})
pp.title('(d) Evolution of third moment',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='lower right',borderaxespad=0.1, fontsize=15)
pp.suptitle('Enantiomer L', x=0.5, y=0.95, fontsize=17, fontweight='700')

'''Σχετικό Σφάλμα χρονικής εξέλιξης ροπών'''
err0_d=[]
for i in range(len(r.y[0,:])): 
    err = np.abs(r.y[0,i]/initial_m_d[0]-m0c_d[i]/initial_m_d[0])/(m0c_d[i]/initial_m_d[0])*100
    err0_d.append(err)

err1_d=[]
for i in range(len(r.y[1,:])): 
    err = np.abs(r.y[1,i]/initial_m_d[1]-m1c_d[i]/initial_m_d[1])/(m1c_d[i]/initial_m_d[1])*100
    err1_d.append(err)
    
err2_d=[]
for i in range(len(r.y[2,:])): 
    err = np.abs(r.y[2,i]/initial_m_d[2]-m2c_d[i]/initial_m_d[2])/(m2c_d[i]/initial_m_d[2])*100
    err2_d.append(err)

err3_d=[]
for i in range(len(r.y[3,:])): 
    err = np.abs(r.y[3,i]/initial_m_d[3]-m3c_d[i]/initial_m_d[3])/(m3c_d[i]/initial_m_d[3])*100
    err3_d.append(err)
    
pp.figure(11)
#Change the figure size
pp.figure(figsize=[16, 12])
pp.subplot(2,2,1)
pp.plot(r.t,err0_d)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(a) Zeroth moment',fontsize=15)
pp.subplot(2,2,2)
pp.plot(r.t,err1_d)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(b) First moment',fontsize=15)
pp.subplot(2,2,3)
pp.plot(r.t,err2_d)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(c) Second moment',fontsize=15)
pp.subplot(2,2,4)
pp.plot(r.t,err3_d)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(d) Third moment',fontsize=15)
pp.suptitle('Enantiomer D', x=0.5, y=0.95, fontsize=17, fontweight='700',)


err0_l=[]
for i in range(len(r.y[4,:])): 
    err = np.abs(r.y[4,i]/initial_m_l[0]-m0c_l[i]/initial_m_l[0])/(m0c_l[i]/initial_m_l[0])*100
    err0_l.append(err)

err1_l=[]
for i in range(len(r.y[5,:])): 
    err = np.abs(r.y[5,i]/initial_m_l[1]-m1c_l[i]/initial_m_l[1])/(m1c_l[i]/initial_m_l[1])*100
    err1_l.append(err)
    
err2_l=[]
for i in range(len(r.y[6,:])): 
    err = np.abs(r.y[6,i]/initial_m_l[2]-m2c_l[i]/initial_m_l[2])/(m2c_l[i]/initial_m_l[2])*100
    err2_l.append(err)

err3_l=[]
for i in range(len(r.y[7,:])): 
    err = np.abs(r.y[7,i]/initial_m_l[3]-m3c_l[i]/initial_m_l[3])/(m3c_l[i]/initial_m_l[3])*100
    err3_l.append(err)
    
pp.figure(12)
#Change the figure size
pp.figure(figsize=[16, 12])
pp.subplot(2,2,1)
pp.plot(r.t,err0_l)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(a) Zeroth moment',fontsize=15)
pp.subplot(2,2,2)
pp.plot(r.t,err1_l)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(b) First moment',fontsize=15)
pp.subplot(2,2,3)
pp.plot(r.t,err2_l)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(c) Second moment',fontsize=15)
pp.subplot(2,2,4)
pp.plot(r.t,err3_l)
pp.xlabel('time',{"fontsize":16})
pp.ylabel('percentage error',{"fontsize":16})
pp.title('(d) Third moment',fontsize=15)
pp.suptitle('Enantiomer L', x=0.5, y=0.95, fontsize=17, fontweight='700',)

'''Κατανομές maxent και comsol για την τελευταία χρονική στιγμή'''
Lmin=0
Lmax=1.4
bnds=[Lmin,Lmax]

pp.figure(13)
pp.figure(figsize=[10, 8])
mulast_d=[r.y[0,-1],r.y[1,-1],r.y[2,-1],r.y[3,-1]]
sollast_d, lambdaslast=maxent_reconstruct_c0_1(mu=mulast_d,bnds=bnds)

mulast_l=[r.y[4,-1],r.y[5,-1],r.y[6,-1],r.y[7,-1]]
sollast_l, lambdaslast=maxent_reconstruct_c0_2(mu=mulast_l,bnds=bnds)

'''reconstructed distribution from comsol moments at last time step'''
mu_comsol_d = [m0c_d[-1],m1c_d[-1],m2c_d[-1],m3c_d[-1]]
mu_comsol_l = [m0c_l[-1],m1c_l[-1],m2c_l[-1],m3c_l[-1]]

sol_comsol_d, lambdas_comsol_d = maxent_reconstruct_c0_1(mu=mu_comsol_d,bnds=bnds)
sol_comsol_l, lambdas_comsol_l = maxent_reconstruct_c0_2(mu=mu_comsol_l,bnds=bnds)

L=np.linspace(0,2)
pp.plot(L,sollast_d(L),'-b,', L,sollast_l(L),'-g',L,sol_comsol_d(L),'-r,', L,sol_comsol_l(L),'-y')
pp.title('t = 20 ')
pp.xlabel('characteristic length',{"fontsize":16})
pp.ylabel('size distribution',{"fontsize":16})
pp.legend(('maxent f (D)','maxent f (L)', 'Comsol f (D)','Comsol f (L)'),loc=0)


'''Σύγκριση Υπερκορεσμών'''
pp.figure(13)
#Change the figure size
pp.figure(figsize=[16, 12])
pp.subplot(2,2,1)
pp.plot(r.t,r.y[8,:],'.r',r.t,Sc_d,'-b')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('Sinf',{"fontsize":16})
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.title('(a) Evolution of Superssaturation (D)',fontsize=15)
pp.subplot(2,2,2)
pp.plot(r.t,r.y[9,:],'.r',r.t,Sc_l,'-b')
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('Sinf',{"fontsize":16})
pp.title('(b) Evolution of Superssaturation (L)',fontsize=15)
pp.legend(('Maximum Entropy','Finite Elements (Comsol)'),loc='upper right',borderaxespad=0.1, fontsize=15)
pp.subplot(2,2,3)
pp.plot(r.t,np.abs(r.y[8,:]-Sc_d)/Sc_d*100)
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('Percentage error',{"fontsize":16})
pp.title('(c) Relative error of Supersaturation (D)',fontsize=15)
pp.subplot(2,2,4)
pp.plot(r.t,np.abs(r.y[9,:]-Sc_l)/Sc_l*100)
pp.xlabel('t(min)',{"fontsize":16})
pp.ylabel('Percentage error',{"fontsize":16})
pp.title('(d) Relative error of Supersaturation (L)',fontsize=15)
